plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'

	// vue 빌드 작업을 위한 node https://github.com/node-gradle/gradle-node-plugin
	id "com.github.node-gradle.node" version "7.0.1"
}

group = 'com.a-ryang'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.springframework.boot:spring-boot-starter-security"

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// database & mybatis
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'

	// logging
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	// Whether to download and install a specific Node.js version or not
	// If false, it will use the globally installed Node.js
	// If true, it will download node using above parameters
	// Note that npm is bundled with Node.js
	download = true
	version = "18.17.1"

	nodeProjectDir = file("${project.projectDir}/app")
}

task buildVueApp(type: NpmTask) {
	dependsOn npmInstall
	args = ['run', 'build']
}

// jar 작업이 실행되기 전 Vue 빌드 및 복사
bootJar.dependsOn buildVueApp